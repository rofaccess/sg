= form_for @componente, html: {class: 'form-horizontal'}, remote: true  do |f|
  bootton.close.close-add-form [type="button" aria-hidden="true"] &times;
  h3 = @componente.id.nil? ? 'Agregar Componente' : 'Editar Componente'

  .row
    .col-md-12
      p
      = FormBuilder::text_field_h(f, :nombre,{input_class: 'required clear', max_length: Domain::NOMBRE, autofocus: true})
      = FormBuilder::text_field_h(f, :costo,{input_class: 'required clear monto-field', max_length: Domain::MONTO})
      = FormBuilder::collection_select(f, :marca_id, Marca.all, :id, :nombre, '',nil, 'col-md-8 with-btn', 'required', nil, false, [true, nueva_marca_componentes_path])
      = FormBuilder::collection_select(f, :componente_categoria_id, ComponenteCategoria.all, :id, :nombre, '', nil, 'col-md-8 with-btn', 'required', nil, false, [true, nueva_categoria_componentes_path])
      = FormBuilder::collection_select(f, :iva_id, Iva.all, :id, :valor, '', nil, 'col-md-8 with-btn required', 'required', nil, false)

      = hidden_field_tag :componente_id, @componente.id

      button.btn.btn-default.close-add-form [type="button"] Cancelar
      = f.submit 'Guardar', class: 'btn btn-primary'

      javascript:
            $('#componente_componente_categoria_id').select2({
                placeholder: 'Seleccione una categoria...',
                formatNoMatches: function(){
                    return 'No se encontraron resultados...';
                }});

            $('#componente_marca_id').select2({
                placeholder: 'Seleccione una marca...',
                formatNoMatches: function(){
                    return 'No se encontraron resultados...';
                }});

            $('#componente_iva_id').select2({
                placeholder: 'Seleccione un valor de iva...',
                formatNoMatches: function(){
                    return 'No se encontraron resultados...';
                }});
            $('.clear').clearInput();

            $('.monto-field').maskMoney();
            $('.monto-field').maskMoney('mask');
            // Quitar los '.' de los numeros antes de enviar el formulario
            $('input[type="submit"]').click(function(e){
              // Se eliminan todos los '.' de los campos
              $('.monto-field').each(function(){
                $(this).val($(this).val().replace(/\./g, ''));
              });
              // Y se envia el formulario
              $(this).parents('form').submit();
              e.preventDefault();
            });
            $(function(){
              var componenteForm = "#{@componente.id.nil? ? '#new_componente' : '#edit_componente_'+ @componente.id.to_s}";
              // Validador del formulario
              $(componenteForm).validate({
                rules: {
                  'componente[nombre]':{
                    remote: {
                      url: "/componentes/check_nombre",
                      type: "get",
                      data: {
                        componente_id: $('#componente_id').val()
                      }
                    }
                 }
                },
                messages: {
                  'componente[nombre]': 'El nombre de componente ya existe en el sistema.'
                }
              });

              //Evento para el submit
              //$('#new_user_submit').click(function(e){
                // Controlar que sea valido y se este seleccionado algun rol
                //if(!$(userForm).valid()){return false;}
                //if($('#user_roles').find('input:checked').length == 0){
                  //$('#user_roles .alert').addClass('show');
                  //return false;
                //}
                // enciar el formulario
                //$(userForm).submit();
                //e.preventDefault();
              //});

            });
